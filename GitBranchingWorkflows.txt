Git Best Practices

1. Don’t git push straight to master. Branch it out!
2. Write descriptive and meaningful commit messages.
3. Rebase your working branch frequently.
4. Test changes even when there are no conflicts.
5. Publish your changes.

 
Git Branching - Branching Workflows (https://git-scm.com/book/en/v2/Git-Branching-Branching-Workflows)

Now that you have the basics of branching and merging down, what can or should you do with them? 
In this section, we’ll cover some common workflows that this lightweight branching makes possible, 
so you can decide if you would like to incorporate them into your own development cycle.

Long-Running Branches



Topic Branches

Topic branches, however, are useful in projects of any size. A topic branch is a short-lived branch thatyou create and use for a single particular feature or related work.This is something you've likely neverdone with a vCs before because it's generally too expensive to create and merge branches. But in Gitit's common to create, work on, merge, and delete branches several times a day.
